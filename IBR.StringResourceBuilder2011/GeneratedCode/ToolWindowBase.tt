<#@ template Debug="True" inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ VSPackageDesigner processor="VSPackageDesignerDirectiveProcessor" requires="fileName='..\IBR.StringResourceBuilder2011.vspackage'" #>
<#@ output extension=".cs" #>
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows;
using System.Runtime.InteropServices;
using Microsoft.VisualStudio.Shell.Interop;
using Microsoft.VisualStudio.Shell;
using System.ComponentModel.Design;

namespace <#= this.Root.CommandTable.SafeProjectName #>
{
<#
  foreach (var toolWindow in this.Root.UserInterface.ToolWindows)
  {
#>

  /// <summary>
  /// This class implements the tool window <#= toolWindow.Name #>ToolWindowBase exposed by this package and hosts a user control.
  ///
  /// In Visual Studio tool windows are composed of a frame (implemented by the shell) and a pane,
  /// usually implemented by the package implementer.
  ///
  /// This class derives from the ToolWindowPane class provided from the MPF in order to use its
  /// implementation of the IVsUIElementPane interface.
  /// </summary>
  [Guid("<#= toolWindow.Guid.ToString() #>")]
  public class <#= toolWindow.Name #>ToolWindowBase : ToolWindowPane
  {
    /// <summary>
    /// Standard constructor for the tool window.
    /// </summary>
    public <#= toolWindow.Name #>ToolWindowBase()
      : base(null)
    {
      this.Caption = "<#= toolWindow.Caption #>";
<#
    if (toolWindow.Menus.Count > 0)
    {
#>
      this.ToolBar = new CommandID(GuidList.guid<#= this.Root.CommandTable.SafeProjectName.Replace(".", string.Empty) #>CmdSet, (int)PkgCmdIDList.<#= toolWindow.Menus[0].Name #>);
<#
    }
#>
    }
  } //class
<#
  }
#>
} //namespace
